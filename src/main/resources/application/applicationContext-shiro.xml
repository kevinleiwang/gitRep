<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
	default-lazy-init="true">

	<description>Shiro安全配置</description>
	<!-- shiro dataSource -->
	<bean id="defaultDataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="removeAbandoned" value="true" />
		<!--1.如果开启了removeAbandoned，当getNumIdle() < 2) and (getNumActive() > getMaxActive() 
			- 3)时被触发. -->
		<property name="removeAbandonedTimeout" value="180" />
		<!--<property name="logAbandoned" value="true" /> -->
		<property name="testOnBorrow" value="true" />
		<property name="testOnReturn" value="true" />
		<property name="validationQuery" value="select 1=1" />
		<property name="driverClassName" value="${sso.jdbc.driverClassName}" />
		<property name="url" value="${sso.jdbc.url}" />
		<property name="username" value="${sso.jdbc.username}" />
		<property name="password" value="${sso.jdbc.password}" />
		<property name="maxActive" value="${sso.jdbc.maxActive}" />
		<property name="maxIdle" value="${sso.jdbc.maxIdle}" />
		<property name="maxWait" value="${sso.jdbc.maxWait}" />
	</bean>
	<!-- Shiro's main business-tier object for web-enabled applications -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="casRealm" />
		<property name="cacheManager" ref="shiroEhcacheManager" />
		<property name="subjectFactory" ref="casSubjectFactory" />
	</bean>

	<bean id="casRealm" class="com.sunivo.umc.cas.shiro.CasExtRealm">
		<property name="defaultRoles" value="ROLE_USER" />
		<property name="casServerUrlPrefix" value="${sso.url}" />
		<property name="casService" value="${sso.callback.url}cas" />
		<property name="roleAttributeNames" value="roles" />
		<property name="permissionAttributeNames" value="permissions" />
	</bean>

	<!-- Shiro Filter -->
	<bean id="shiroFilter" class="com.sunivo.umc.cas.shiro.SecurityFilterFactoryBean">
		<property name="dataSource" ref="defaultDataSource" />
		<property name="appCode" value="${sso.applicationCode}" />
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl"
			value="${sso.url}/login?service=${sso.callback.url}cas" />
		<property name="successUrl" value="/" />
		<property name="filters">
			<util:map>
				<!-- 添加casFilter到shiroFilter -->
				<entry key="casFilter" value-ref="casFilter" />
			</util:map>
		</property>
		<property name="filterChainDefinitions">
			<value>
				/error/** = anon
				/services/** = anon
				/cas = casFilter
				/resources/** = anon
				/api/** = anon
				/** = authc
			</value>
		</property>
	</bean>

	<bean id="casFilter" class="org.apache.shiro.cas.CasFilter">
		<property name="failureUrl" value="/error/cas" />
	</bean>

	<bean id="casSubjectFactory" class="org.apache.shiro.cas.CasSubjectFactory" />

	<!-- 用户授权信息Cache, 采用EhCache -->
	<bean id="shiroEhcacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<property name="cacheManagerConfigFile" value="classpath:ehcache-shiro.xml" />
	</bean>

	<!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />

	<bean
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="staticMethod"
			value="org.apache.shiro.SecurityUtils.setSecurityManager" />
		<property name="arguments" ref="securityManager" />
	</bean>
</beans>